  # This workflow does the following:
  # - Creates an instance from the template for a given database backup file
  # In terraform you need to escape the $$ or it will cause errors.

main:
  params: [event]
  steps:
  - log_event:
      call: sys.log
      args:
          text: $${event}
          severity: INFO
  - decode_pubsub_message:
      assign:
      - base64: $${base64.decode(event.data.message.data)}
      - message_text: $${text.decode(base64)}
  - log_message_text:
      call: sys.log
      args:
          text: $${message_text}
          severity: INFO
  - parse_pubsub_message:
      assign:
      - message_json: $${json.decode(message_text)}
  - log_message_json:
      call: sys.log
      args:
          json: $${message_json}
          severity: INFO
  - extract_metadata:
      assign:
      - object_bucket: $${message_json.bucket}
      - object_name: $${message_json.name}
  - maybe_start_an_instance:
      switch:
        - condition: $${text.match_regex(object_name, "^publishing-api-postgres/\\d{4}-\\d{2}-\\d{2}T\\d{6}Z-publishing_api_production\\.gz$")}
          steps:
          - log_starting_publishing_api_instance:
              call: sys.log
              args:
                  text: "Starting publishing-api instance"
                  severity: INFO
          - start_publishing_api:
              call: googleapis.compute.v1.instances.insert
              args:
                  project: ${project_id}
                  zone: ${zone}
                  sourceInstanceTemplate: https://www.googleapis.com/compute/v1/projects/${project_id}/global/instanceTemplates/publishing-api
                  body:
                      name: publishing-api
                      metadata:
                        items:
                        - key: object_bucket
                          value: $${object_bucket}
                        - key: object_name
                          value: $${object_name}
                        - key: user-data
                          value: ${postgres_startup_script}
                        - key: google-logging-enabled
                          value: true
                        - key: gce-container-declaration
                          value: ${publishing_api_metadata_value}
          - return_started_publishing_api:
              return: $${"Started publishing-api instance"}
        - condition: $${text.match_regex(object_name, "^content-store-postgres/\\d{4}-\\d{2}-\\d{2}T\\d{6}Z-content_store_production\\.gz$")}
          steps:
          - log_starting_content_instance:
              call: sys.log
              args:
                  text: "Starting content instance"
                  severity: INFO
          - start_content:
              call: googleapis.compute.v1.instances.insert
              args:
                  project: ${project_id}
                  zone: ${zone}
                  sourceInstanceTemplate: https://www.googleapis.com/compute/v1/projects/${project_id}/global/instanceTemplates/content
                  body:
                      name: content
                      metadata:
                        items:
                        - key: object_bucket
                          value: $${object_bucket}
                        - key: object_name
                          value: $${object_name}
                        - key: user-data
                          value: ${postgres_startup_script}
                        - key: google-logging-enabled
                          value: true
                        - key: gce-container-declaration
                          value: ${content_metadata_value}
          - return_started_content:
              return: $${"Started content instance"}
        - condition: $${text.match_regex(object_name, "^shared-documentdb/\\d{4}-\\d{2}-\\d{2}T\\d{6}Z-govuk_content_production\\.gz$")}
          steps:
          - log_starting_publisher_instance:
              call: sys.log
              args:
                  text: "Starting publisher instance"
                  severity: INFO
          - start_mongodb:
              call: googleapis.compute.v1.instances.insert
              args:
                  project: ${project_id}
                  zone: ${zone}
                  sourceInstanceTemplate: https://www.googleapis.com/compute/v1/projects/${project_id}/global/instanceTemplates/publisher
                  body:
                      name: publisher
                      metadata:
                        items:
                        - key: object_bucket
                          value: $${object_bucket}
                        - key: object_name
                          value: $${object_name}
                        - key: google-logging-enabled
                          value: true
                        - key: serial-port-logging-enable
                          value: true
                        - key: gce-container-declaration
                          value: ${publisher_metadata_value}
          - return_started_publisher:
              return: $${"Started publisher instance"}
  - log_not_starting_instance:
      call: sys.log
      args:
          text: "Not starting any instance"
          severity: INFO
  - return_did_not_start:
      return: $${"Did not start any instance"}
